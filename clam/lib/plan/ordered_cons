/*  This is a proof plan for theorem:
    ordered_cons: []==>x:int=>y:int list=>ordered(x::y)=>ordered(y)
    planner = dplan, clam_version(2.8.1), oyster_version($Id: ordered_cons,v 1.12 1999/05/10 13:21:27 img Exp $)

    Time taken to find plan: 1180ms
    Environment:
    def(ordered)
    def(<=>)
    def(true)
    eqn(ordered4)
    eqn(ordered3)
    eqn(ordered2)
    eqn(ordered1)
    eqn(imp2)
    eqn(imp1)
    eqn(and4)
    eqn(and3)
    eqn(and2)
    eqn(and1)
    eqn(or4)
    eqn(or3)
    eqn(or2)
    eqn(or1)
    eqn(ordered4)
    eqn(ordered4)
    eqn(ordered3)
    eqn(ordered3)
    eqn(ordered2)
    eqn(ordered1)
    eqn(ordered1)
    eqn(imp2)
    eqn(imp2)
    eqn(imp1)
    eqn(and4)
    eqn(and4)
    eqn(and3)
    eqn(and3)
    eqn(and2)
    eqn(and1)
    eqn(or4)
    eqn(or3)
    eqn(or2)
    eqn(or2)
    eqn(or1)
    eqn(or1)
    eqn(meminsert2)
    eqn(meminsert2)
    eqn(meminsert1)
    eqn(meminsert1)
    eqn(disttwo)
    eqn(disttwo)
    wave(ordered4)
    wave(ordered4)
    wave(ordered3)
    wave(ordered3)
    wave(ordered2)
    wave(ordered1)
    wave(ordered1)
    wave(imp2)
    wave(imp2)
    wave(imp1)
    wave(and4)
    wave(and4)
    wave(and3)
    wave(and3)
    wave(and2)
    wave(and1)
    wave(or4)
    wave(or3)
    wave(or2)
    wave(or2)
    wave(or1)
    wave(or1)
    wave(meminsert2)
    wave(meminsert2)
    wave(meminsert1)
    wave(meminsert1)
    wave(disttwo)
    wave(disttwo)
    red(ordered4)
    red(ordered4)
    red(ordered3)
    red(ordered3)
    red(ordered2)
    red(ordered1)
    red(imp2)
    red(imp1)
    red(and4)
    red(and3)
    red(and2)
    red(and1)
    red(or4)
    red(or3)
    red(or2)
    red(or1)
    trs(default)
    thm(ordered_cons)
    thm(meminsert2)
    thm(meminsert1)
    thm(disttwo)
    lemma(decless2)
    lemma(ipc_dp_imp_e4)
    lemma(ipc_dp_imp_e3)
    lemma(ipc_dp_imp_e2)
    lemma(cnc_s_bis)
    lemma(succ_nonzero_right)
    lemma(succ_nonzero_left)
    lemma(plesssucc2)
    lemma(plesssucc)
    lemma(list1)
    lemma(arith3)
    lemma(arith2)
    lemma(arith1)
    synth(ordered)
    scheme(list_ind)
    scheme(list_double)
    scheme(list_primitive)
    scheme(pnat_primitive)
    mthd(base_case/1)
    mthd(generalise/2)
    mthd(ind_strat/1)
    mthd(normalize/1)
    smthd(apply_lemma/1)
    smthd(backchain_lemma/1)
    smthd(base_case/1)
    smthd(cancellation/2)
    smthd(casesplit/1)
    smthd(elementary/1)
    smthd(equal/2)
    smthd(existential/2)
    smthd(fertilization_strong/1)
    smthd(fertilize/2)
    smthd(fertilize_left_or_right/1)
    smthd(induction/1)
    smthd(normal/1)
    smthd(normalize_term/1)
    smthd(pw_fertilize/1)
    smthd(pwf/1)
    smthd(pwf_then_fertilize/2)
    smthd(ripple/2)
    smthd(ripple_and_cancel/1)
    smthd(step_case/1)
    smthd(sym_eval/1)
    smthd(unblock/3)
    smthd(unblock_fertilize_lazy/1)
    smthd(unblock_lazy/1)
    smthd(unblock_then_fertilize/2)
    smthd(unblock_then_wave/2)
    smthd(wave/4)
    smthd(weak_fertilize/4)
 */

/* This is the pretty-printed form
ind_strat([(y:int list)-v0::v2::v1]) then 
  [base_case(...),
   base_case(...),
   base_case(...)
  ]

*/

proof_plan([]==>x:int=>y:int list=>ordered(x::y)=>ordered(y),ordered_cons,1180,ind_strat(induction(lemma(list_ind)-[(y:int list)-v0::v2::v1])then[base_case(normalize_term([reduction([1],[ordered2,equ(u(1),left)]),reduction([],[imp1,equiv(left)]),reduction([],[ordered1,equ(u(1),left)])])then[elementary((intro(new[x])then wfftacs)then unfold_iff then intro(explicit(0))then simplify then wfftacs)]),base_case(normalize_term([reduction([2],[ordered2,equ(u(1),left)])])then[elementary((intro(new[x])then wfftacs)then unfold_iff then(intro(new[_150459])then wfftacs)then intro(explicit(0))then simplify then wfftacs)]),step_case(ripple(direction_out,casesplit(disjunction([v2<v0=>void,v2<v0]))then[wave(direction_out,[2],[ordered4,equ(u(1),left)],[])then[casesplit(disjunction([v0<x=>void,v0<x]))then[wave(direction_out,[1],[ordered4,equ(u(1),left)],[]),wave(direction_out,[1],[ordered3,complementary,equ(u(1),left)],[])]],wave(direction_out,[2],[ordered3,complementary,equ(u(1),left)],[])then[casesplit(disjunction([v0<x=>void,v0<x]))then[idtac,idtac]]])then[unblock_then_fertilize(strong,unblock_fertilize_lazy([idtac])then fertilize(strong,pwf_then_fertilize(strong,fertilization_strong(v3)))),idtac,idtac,idtac])])then[base_case(elementary(unfold_iff then(intro(new[_150242])then wfftacs)then elim(_150242))),base_case(normalize_term([reduction([1],[ordered4,equ(u(1),left)]),reduction([1],[ordered3,equ(u(1),left)]),reduction([],[imp2,equiv(left)])])then[elementary(unfold_iff then intro(explicit(0))then simplify then wfftacs)]),base_case(normalize_term([reduction([1],[ordered3,equ(u(1),left)]),reduction([],[imp2,equiv(left)])])then[elementary(unfold_iff then intro(explicit(0))then simplify then wfftacs)])],dplan).
