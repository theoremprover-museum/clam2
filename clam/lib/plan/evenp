/*  This is a proof plan for theorem:
    evenp: []==>x:pnat=>y:pnat=>(even(x)#even(y))=>even(plus(x,y))
    planner = dplan, clam_version(2.8.1), oyster_version($Id: evenp,v 1.15 1999/05/10 13:20:57 img Exp $)

    Time taken to find plan: 810ms
    Environment:
    def(plus)
    def(even)
    def(<=>)
    def(true)
    eqn(plus2)
    eqn(plus1)
    eqn(even3)
    eqn(even2)
    eqn(even1)
    eqn(imp2)
    eqn(imp1)
    eqn(and4)
    eqn(and3)
    eqn(and2)
    eqn(and1)
    eqn(or4)
    eqn(or3)
    eqn(or2)
    eqn(or1)
    eqn(plus2)
    eqn(plus2)
    eqn(plus1)
    eqn(even3)
    eqn(even3)
    eqn(even2)
    eqn(even2)
    eqn(even1)
    eqn(even1)
    eqn(imp2)
    eqn(imp2)
    eqn(imp1)
    eqn(and4)
    eqn(and4)
    eqn(and3)
    eqn(and3)
    eqn(and2)
    eqn(and1)
    eqn(or4)
    eqn(or3)
    eqn(or2)
    eqn(or2)
    eqn(or1)
    eqn(or1)
    eqn(disttwo)
    eqn(disttwo)
    wave(plus2)
    wave(plus2)
    wave(plus1)
    wave(even3)
    wave(even3)
    wave(even2)
    wave(even2)
    wave(even1)
    wave(even1)
    wave(imp2)
    wave(imp2)
    wave(imp1)
    wave(and4)
    wave(and4)
    wave(and3)
    wave(and3)
    wave(and2)
    wave(and1)
    wave(or4)
    wave(or3)
    wave(or2)
    wave(or2)
    wave(or1)
    wave(or1)
    wave(disttwo)
    wave(disttwo)
    red(plus2)
    red(plus1)
    red(even3)
    red(even2)
    red(even1)
    red(imp2)
    red(imp1)
    red(and4)
    red(and3)
    red(and2)
    red(and1)
    red(or4)
    red(or3)
    red(or2)
    red(or1)
    trs(default)
    thm(evenp)
    thm(disttwo)
    lemma(ipc_dp_imp_e4)
    lemma(ipc_dp_imp_e3)
    lemma(ipc_dp_imp_e2)
    lemma(cnc_s_bis)
    lemma(succ_nonzero_right)
    lemma(succ_nonzero_left)
    lemma(plesssucc2)
    lemma(plesssucc)
    lemma(list1)
    lemma(arith3)
    lemma(arith2)
    lemma(arith1)
    synth(even)
    scheme(list_primitive)
    scheme(pnat_primitive)
    scheme(twos)
    mthd(base_case/1)
    mthd(generalise/2)
    mthd(ind_strat/1)
    mthd(normalize/1)
    smthd(apply_lemma/1)
    smthd(backchain_lemma/1)
    smthd(base_case/1)
    smthd(cancellation/2)
    smthd(casesplit/1)
    smthd(elementary/1)
    smthd(equal/2)
    smthd(existential/2)
    smthd(fertilization_strong/1)
    smthd(fertilize/2)
    smthd(fertilize_left_or_right/1)
    smthd(induction/1)
    smthd(normal/1)
    smthd(normalize_term/1)
    smthd(pw_fertilize/1)
    smthd(pwf/1)
    smthd(pwf_then_fertilize/2)
    smthd(ripple/2)
    smthd(ripple_and_cancel/1)
    smthd(step_case/1)
    smthd(sym_eval/1)
    smthd(unblock/3)
    smthd(unblock_fertilize_lazy/1)
    smthd(unblock_lazy/1)
    smthd(unblock_then_fertilize/2)
    smthd(unblock_then_wave/2)
    smthd(wave/4)
    smthd(weak_fertilize/4)
 */

/* This is the pretty-printed form
ind_strat([(x:pnat)-s(s(v0))])

*/

proof_plan([]==>x:pnat=>y:pnat=>(even(x)#even(y))=>even(plus(x,y)),evenp,810,ind_strat(induction(lemma(twos)-[(x:pnat)-s(s(v0))])then[base_case(normalize_term([reduction([1,1],[even1,equ(u(1),left)]),reduction([1],[and2,equiv(left)]),reduction([1,2],[plus1,equ(pnat,left)])])then[elementary((intro(new[y])then wfftacs)then unfold_iff then(intro(new[_108261])then wfftacs)then hyp(_108261))]),base_case(normalize_term([reduction([1,1],[even2,equ(u(1),left)]),reduction([1],[and3,equiv(left)]),reduction([],[imp2,equiv(left)])])then[elementary((intro(new[y])then wfftacs)then unfold_iff then intro(explicit(0))then simplify then wfftacs)]),step_case(ripple(direction_out,wave(direction_out,[1,2],[plus2,equ(pnat,left)],[])then[wave(direction_out,[1,1,2],[plus2,equ(pnat,left)],[])then[wave(direction_out,[2],[even3,equ(u(1),left)],[])then[wave(direction_out,[1,1],[even3,equ(u(1),left)],[])]]])then[unblock_then_fertilize(strong,unblock_fertilize_lazy([idtac])then fertilize(strong,pwf_then_fertilize(strong,fertilization_strong(v1))))])]),dplan).
