problem([]==>f:(int=>int)=>l:int list=>length(mapcar(l,f))=length(l)in pnat,
ind_strat(induction(lemma(list_primitive)-[(l:int list)-v1::v0])then[base_case(normalize_term([reduction([1,1,1],[mapcar1,equ(int list,left)]),reduction([1,1],[length1,equ(pnat,left)]),reduction([2,1],[length1,equ(pnat,left)])])then[elementary((intro(new[f])then wfftacs)then unfold_iff then identity)]),step_case(ripple(direction_out,wave(direction_out,[2,1],[length2,equ(pnat,left)],[])then[wave(direction_out,[1,1,1],[mapcar2,equ(int list,left)],[])then[wave(direction_out,[1,1],[length2,equ(pnat,left)],[])then[wave(direction_out,[],[cnc_s,imp(right)],[])]]])then[unblock_then_fertilize(strong,unblock_fertilize_lazy([idtac])then fertilize(strong,pwf_then_fertilize(strong,fertilization_strong(v2))))])]),lambda(v0,lambda(v1,lambda(v2,su(su(v4,[v3 of v0],[v4]),[v2 of v1],[v3]))of lambda(l,list_ind(l,lambda(v0,su(su(lambda(v1,su(v2,[v1 of v0],[v2]))of lambda(v0,su(lambda(v1,su(v2,[v1 of v0],[v2]))of lambda(v0,su(lambda(v1,su(v2,[v1 of v0],[v2]))of lambda(f,axiom),[term_of(length1)],[length1])),[term_of(length1)],[length1])),[mapcar1 of v0],[v1]),[term_of(mapcar1)],[mapcar1])),[v1,v0,v2,lambda(v3,su(su(su(lambda(v4,su(v5,[v4 of v3],[v5]))of lambda(v3,su(su(su(su(lambda(v4,su(v5,[v4 of v3],[v5]))of lambda(v3,su(su(su(lambda(v4,su(v5,[v4 of v3],[v5]))of lambda(v3,su(su(su(su(v4,[v5 of(lambda(v4,su(v5,[v4 of v3],[v5]))of v2)],[v4]),[v4 of length(v0)],[v5]),[cnc_s of length(mapcar(v0,v3))],[v4]),[term_of(cnc_s)],[cnc_s])),[v4 of mapcar(v0,v3)],[v5]),[length2 of(v3 of v1)],[v4]),[term_of(length2)],[length2])),[v5 of v0],[v6]),[v4 of v1],[v5]),[mapcar2 of v3],[v4]),[term_of(mapcar2)],[mapcar2])),[v4 of v0],[v5]),[length2 of v1],[v4]),[term_of(length2)],[length2]))])))),
[
]).
